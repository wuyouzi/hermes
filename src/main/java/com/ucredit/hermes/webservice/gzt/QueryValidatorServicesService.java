package com.ucredit.hermes.webservice.gzt;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * This class was generated by Apache CXF 2.7.10
 * 2014-05-09T13:42:24.012+08:00
 * Generated source version: 2.7.10
 */
@WebServiceClient(
        name = "QueryValidatorServicesService",
        wsdlLocation = "QueryValidatorServices.wsdl",
        targetNamespace = "http://app.service.validator.businesses.gboss.id5.cn")
public class QueryValidatorServicesService extends Service {
    private static Logger logger = LoggerFactory
        .getLogger(QueryValidatorServicesService.class);
    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName(
        "http://app.service.validator.businesses.gboss.id5.cn",
        "QueryValidatorServicesService");
    public final static QName QueryValidatorServices = new QName(
        "http://app.service.validator.businesses.gboss.id5.cn",
        "QueryValidatorServices");

    static {
        URL url = Thread.currentThread().getContextClassLoader()
            .getResource("QueryValidatorServices.wsdl");
        if (url == null) {
            QueryValidatorServicesService.logger.warn(
                "Can not initialize the default wsdl from {0}",
                "QueryValidatorServices.wsdl");
        }

        WSDL_LOCATION = url;
    }

    public QueryValidatorServicesService(URL wsdlLocation) {
        super(wsdlLocation, QueryValidatorServicesService.SERVICE);
    }

    public QueryValidatorServicesService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QueryValidatorServicesService() {
        super(QueryValidatorServicesService.WSDL_LOCATION,
            QueryValidatorServicesService.SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public QueryValidatorServicesService(WebServiceFeature... features) {
        super(QueryValidatorServicesService.WSDL_LOCATION,
            QueryValidatorServicesService.SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public QueryValidatorServicesService(URL wsdlLocation,
            WebServiceFeature... features) {
        super(wsdlLocation, QueryValidatorServicesService.SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public QueryValidatorServicesService(URL wsdlLocation, QName serviceName,
            WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return
     *         returns QueryValidatorServices
     */
    @WebEndpoint(name = "QueryValidatorServices")
    public QueryValidatorServices getQueryValidatorServices() {
        return super.getPort(
            QueryValidatorServicesService.QueryValidatorServices,
            QueryValidatorServices.class);
    }

    /**
     * @param features
     *        A list of {@link javax.xml.ws.WebServiceFeature} to configure on
     *        the proxy. Supported features not in the <code>features</code>
     *        parameter will have their default values.
     * @return
     *         returns QueryValidatorServices
     */
    @WebEndpoint(name = "QueryValidatorServices")
    public QueryValidatorServices getQueryValidatorServices(
            WebServiceFeature... features) {
        return super.getPort(
            QueryValidatorServicesService.QueryValidatorServices,
            QueryValidatorServices.class, features);
    }

}
