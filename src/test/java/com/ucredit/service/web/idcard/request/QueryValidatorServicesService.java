package com.ucredit.service.web.idcard.request;

import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.7.7
 * 2013-10-28T17:16:59.036+08:00
 * Generated source version: 2.7.7
 */
@WebServiceClient(
        name = "QueryValidatorServicesService",
        wsdlLocation = "http://gboss.id5.cn/services/QueryValidatorServices?wsdl",
        targetNamespace = "http://app.service.validator.businesses.gboss.id5.cn")
public class QueryValidatorServicesService extends Service {

    public static URL wsdlLocation;

    public final static QName SERVICE = new QName(
        "http://app.service.validator.businesses.gboss.id5.cn",
        "QueryValidatorServicesService");
    public final static QName QueryValidatorServices = new QName(
        "http://app.service.validator.businesses.gboss.id5.cn",
        "QueryValidatorServices");

    static {
        try (InputStream fis = Thread.currentThread().getContextClassLoader()
            .getResourceAsStream("idcard_auth.properties");) {
            // 配置文件路径,加载配置文件
            Properties prop = new Properties();
            prop.load(fis);
            // 加载配置
            URL url = null;
            try {
                url = new URL(prop.getProperty("wsdl_location"));
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
            QueryValidatorServicesService.wsdlLocation = url;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public QueryValidatorServicesService(URL wsdlLocation) {
        super(wsdlLocation, QueryValidatorServicesService.SERVICE);
    }

    public QueryValidatorServicesService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QueryValidatorServicesService() {
        super(QueryValidatorServicesService.wsdlLocation,
            QueryValidatorServicesService.SERVICE);
    }

    /**
     * @return
     *         returns QueryValidatorServices
     */
    @WebEndpoint(name = "QueryValidatorServices")
    public QueryValidatorServices getQueryValidatorServices() {
        return super.getPort(
            QueryValidatorServicesService.QueryValidatorServices,
            QueryValidatorServices.class);
    }

    /**
     * @param features
     *        A list of {@link javax.xml.ws.WebServiceFeature} to configure on
     *        the proxy. Supported features not in the <code>features</code>
     *        parameter will have their default values.
     * @return
     *         returns QueryValidatorServices
     */
    @WebEndpoint(name = "QueryValidatorServices")
    public QueryValidatorServices getQueryValidatorServices(
            WebServiceFeature... features) {
        return super.getPort(
            QueryValidatorServicesService.QueryValidatorServices,
            QueryValidatorServices.class, features);
    }

}
